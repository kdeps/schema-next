/// Abstractions for Kdeps Project Settings
///
/// This module defines the structure for project-specific settings in the Kdeps system. It includes
/// configurations related to the API server, Docker agent settings, and security settings. These
/// settings allow customization of the project's environment, such as enabling API server mode or
/// configuring Docker and security parameters.
@ModuleInfo { minPklVersion = "0.28.2" }

@go.Package { name = "github.com/kdeps/schema/gen/project" }

open module org.kdeps.pkl.Project

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.10.0#/go.pkl"

import "APIServer.pkl"
import "WebServer.pkl"
import "Docker.pkl"

/// Defines the environment type.
typealias BuildEnv = "dev" | "prod"

/// Class representing the settings and configurations for a project.
class Settings {
        /// Boolean flag to enable or disable API server mode for the project.
        ///
        /// - `true`: The project runs in API server mode.
        /// - `false`: The project does not run in API server mode. Default is `false`.
        APIServerMode: Boolean? = false

        /// Settings for configuring the API server, which is optional.
        ///
        /// If API server mode is enabled, these settings provide additional configuration for the API server.
        /// [APIServer.APIServerSettings]: Defines the structure and properties for API server settings.
        APIServer: APIServer.APIServerSettings?

        /// Boolean flag to enable or disable Web server mode for the project.
        ///
        /// - `true`: The project runs in Web server mode.
        /// - `false`: The project does not run in Web server mode. Default is `false`.
        WebServerMode: Boolean? = false

        /// Settings for configuring the Web server, which is optional.
        ///
        /// If Web server mode is enabled, these settings provide additional configuration for the Web server.
        /// [WebServer.WebServerConfig]: Defines the structure and properties for Web server settings.
        WebServer: WebServer.WebServerSettings?

        /// Docker-related settings for the project's agent.
        ///
        /// These settings define how the Docker agent should be configured for the project.
        /// [Docker.DockerSettings]: Includes properties such as docker image, container settings, and other
        /// Docker-specific configurations.
        AgentSettings: Docker.DockerSettings?

        /// Maximum number of concurrent requests allowed in the workflow.
        ///
        /// This setting controls the rate limiting behavior for workflow execution.
        /// Default value is 5 concurrent requests.
        RateLimitMax: Int? = 5

        /// Environment setting for the workflow execution.
        ///
        /// Specifies whether the workflow runs in development or production mode.
        /// Valid values are "dev", "development", "prod", or "production".
        ///
        /// In production mode ("prod" or "production"):
        /// - Gin framework runs in release mode (no debug output)
        /// - Log level is set to WARN (less verbose)
        /// - DEBUG environment variable is set to 0
        /// - Debug logs are suppressed
        ///
        /// In development mode ("dev" or "development"):
        /// - Gin framework runs in debug mode (verbose output)
        /// - Log level is set to INFO or DEBUG (based on DEBUG env var)
        /// - DEBUG environment variable is set to 1
        /// - Full logging and debug information available
        Environment: BuildEnv? = "dev"
}
